#include <stdio.h>
#include <stdlib.h>

#define MAX 5  


struct Queue {
    int items[MAX];
    int front;
    int rear;
} q;


void initializeQueue() {
    q.front = -1;
    q.rear = -1;
}


int isFull() {
    return (q.rear + 1) % MAX == q.front;
}


int isEmpty() {
    return q.front == -1;
}


void enqueue(int value) {
    if (isFull()) {
        printf("Queue Overflow! Cannot insert %d\n", value);
        return;
    }
    if (isEmpty()) {
        q.front = 0; // Set front to 0 if queue was empty
    }
    q.rear = (q.rear + 1) % MAX; // Circular increment
    q.items[q.rear] = value;     // Insert the value
    printf("Inserted %d into the queue\n", value);
}


int dequeue() {
    if (isEmpty()) {
        printf("Queue Underflow! Cannot delete from an empty queue\n");
        return -1; // Indicating that the queue is empty
    }
    int value = q.items[q.front];
    if (q.front == q.rear) {
        // Queue has only one element, reset the queue
        q.front = -1;
        q.rear = -1;
    } else {
        q.front = (q.front + 1) % MAX; // Circular increment
    }
    printf("Deleted %d from the queue\n", value);
    return value;
}


void display() {
    if (isEmpty()) {
        printf("Queue is empty\n");
        return;
    }
    printf("Queue elements are: ");
    int i = q.front;
    while (1) {
        printf("%d ", q.items[i]);
        if (i == q.rear) break; // Stop when reaching the rear
        i = (i + 1) % MAX; // Circular increment
    }
    printf("\n");
}


int main() {
    initializeQueue();
    
    int choice, value;
    
    while (1) {
        printf("\nMenu:\n");
        printf("1. Insert\n");
        printf("2. Delete\n");
        printf("3. Display\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);
        
        switch (choice) {
            case 1:
                printf("Enter a value to insert: ");
                scanf("%d", &value);
                enqueue(value);
                break;
            case 2:
                dequeue();
                break;
            case 3:
                display();
                break;
            case 4:
                exit(0);
            default:
                printf("Invalid choice! Please choose again.\n");
        }
    }
    
    return 0;
}
